-- Admin
CREATE TABLE admin(
    username VARCHAR(255) NOT NULL PRIMARY KEY,
    password VARCHAR(255) NOT NULL
);

-- Attachment
CREATE TABLE attachment(
    file_id INT(4) NOT NULL,
    message_id INT(4) NOT NULL,
    PRIMARY KEY (file_id, message_id)
);

-- Chat
CREATE TABLE chat(
    id INT(4) NOT NULL PRIMARY KEY AUTO_INCREMENT
);

-- Chat Member
CREATE TABLE chat_member(
    chat_id INT(4) NOT NULL,
    user_id VARCHAR(255) NOT NULL,
    PRIMARY KEY (chat_id, user_id)
);

-- Doji Coin Transaction
CREATE TABLE doji_coin_transaction(
    id INT(4) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    description TEXT(500) NOT NULL,
    amount BIGINT(8) NOT NULL,
    timestamp TIMESTAMP NOT NULL,
    external_transaction_id VARCHAR(255) NOT NULL,
    source_id INT(4) NOT NULL,
    user_id VARCHAR(255) NOT NULL
);

-- Experience
CREATE TABLE experience(
  expert_id VARCHAR(255) NOT NULL,
  field VARCHAR(255) NOT NULL,
  description TEXT(500) NOT NULL,
  PRIMARY KEY (expert_id, field)
);

-- Expert
CREATE TABLE expert(
    username VARCHAR(255) NOT NULL UNIQUE,
    verified_by_admin_id VARCHAR(255) NOT NULL,
    PRIMARY KEY (username)
);

-- Expert Application
CREATE TABLE expert_application(
    username VARCHAR(255) NOT NULL,
    timestamp TIMESTAMP NOT NULL,
    description TEXT(500) NOT NULL,
    PRIMARY KEY (username, timestamp)
);

-- File
CREATE TABLE file(
    id INT(4) NOT NULL PRIMARY KEY,
    bucket VARCHAR(255) NOT NULL,
    url VARCHAR(2048) NOT NULL,
    name VARCHAR(255) NOT NULL,
    size INT(4) NOT NULL,
    mime_type VARCHAR(255) NOT NULL
);

-- Friend
CREATE TABLE friend(
    user1_id VARCHAR(255) NOT NULL,
    user2_id VARCHAR(255) NOT NULL,
    PRIMARY KEY (user1_id, user2_id)
);

-- Message
CREATE TABLE message(
    id INT(4) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    timestamp TIMESTAMP NOT NULL,
    text TEXT(500) NOT NULL,
    chat_id INT(4) NOT NULL,
    sender_id VARCHAR(255) NOT NULL
);

-- Payment Method
CREATE TABLE payment_method(
    id VARCHAR(255) NOT NULL,
    provider VARCHAR(255) NOT NULL,
    display_name VARCHAR(255) NOT NULL,
    source_id INT(4) NOT NULL,
    owner_id VARCHAR(255) NOT NULL,
    PRIMARY KEY (id, provider)
);

-- Review
CREATE TABLE review(
    user_id VARCHAR(255) NOT NULL,
    expert_id VARCHAR(255) NOT NULL,
    content TEXT(500) NOT NULL,
    rating TINYINT NOT NULL,
    PRIMARY KEY (user_id, expert_id)
    -- CHECK (rating BETWEEN 1 AND 5)
    -- seems to be incompatible with SQLDelight schema reader
);

-- Service
CREATE TABLE service(
  expert_id VARCHAR(255) NOT NULL,
  sname VARCHAR(255) NOT NULL,
  fee BIGINT(8) NOT NULL,
  description TEXT(500) NOT NULL,
  PRIMARY KEY (expert_id, sname)
);

-- Session
CREATE TABLE session(
    id INT(4) NOT NULL PRIMARY KEY AUTO_INCREMENT,
    meeting_provider_id VARCHAR(255) NOT NULL,
    fee BIGINT(8) NOT NULL,
    coin_on_hold BIGINT(8) NOT NULL,
    status ENUM('PENDING', 'ACCEPTED', 'ENDED', 'REVIEWED', 'CANCELED') NOT NULL,
    topic VARCHAR(255) NOT NULL,
    duration INT(4) NOT NULL,
    start_time TIMESTAMP NOT NULL,
    source_id INT(4) NOT NULL,
    creator_id VARCHAR(255) NOT NULL,
    expert_id VARCHAR(255) NOT NULL,
    service_name VARCHAR(255) NOT NULL
);

-- Session Participant
CREATE TABLE session_participant(
  session_id INT(4) NOT NULL,
  user_id VARCHAR(255) NOT NULL,
  PRIMARY KEY (session_id, user_id)
);

-- Transaction Source
CREATE TABLE transaction_source(
    source_id INT(4) NOT NULL PRIMARY KEY AUTO_INCREMENT
);

-- User
CREATE TABLE user(
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    display_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    coin_balance BIGINT(8) NOT NULL,
    online_status BOOLEAN NOT NULL,
    register_timestamp TIMESTAMP NOT NULL,
    profile_pic_id INT(4) NOT NULL,
    PRIMARY KEY (username)
);


-- FOREIGN KEY

-- Attachment
ALTER TABLE attachment
    ADD FOREIGN KEY (file_id) REFERENCES file(id),
    ADD FOREIGN KEY (message_id) REFERENCES message(id);

-- Chat Member
ALTER TABLE chat_member
    ADD FOREIGN KEY (chat_id) REFERENCES chat(id),
    ADD FOREIGN KEY (user_id) REFERENCES user(username);

-- Doji Coin Transaction
ALTER TABLE doji_coin_transaction
    ADD FOREIGN KEY (source_id) REFERENCES transaction_source(source_id),
    ADD FOREIGN KEY (user_id) REFERENCES user(username);

-- Experience
ALTER TABLE experience
    ADD FOREIGN KEY (expert_id) REFERENCES expert(username);

-- Expert
ALTER TABLE expert
    ADD FOREIGN KEY (username) REFERENCES user(username),
    ADD FOREIGN KEY (verified_by_admin_id) REFERENCES admin(username);

-- Expert Application
ALTER TABLE expert_application
    ADD FOREIGN KEY (username) REFERENCES user(username);

-- Friend
ALTER TABLE friend
    ADD FOREIGN KEY (user1_id) REFERENCES user(username),
    ADD FOREIGN KEY (user2_id) REFERENCES user(username);

-- Message
ALTER TABLE message
    ADD FOREIGN KEY (chat_id) REFERENCES chat(id),
    ADD FOREIGN KEY (sender_id) REFERENCES user(username);

-- Payment Method
ALTER TABLE payment_method
    ADD FOREIGN KEY (source_id) REFERENCES transaction_source(source_id),
    ADD FOREIGN KEY (owner_id) REFERENCES user(username);

-- Review
ALTER TABLE review
    ADD FOREIGN KEY (user_id) REFERENCES user(username),
    ADD FOREIGN KEY (expert_id) REFERENCES expert(username);

-- Service
ALTER TABLE service
    ADD FOREIGN KEY (expert_id) REFERENCES expert(username);

-- Session
ALTER TABLE session
    ADD FOREIGN KEY (source_id) REFERENCES transaction_source(source_id),
    ADD FOREIGN KEY (creator_id) REFERENCES user(username),
    ADD FOREIGN KEY (expert_id, service_name) REFERENCES service(expert_id, sname);

-- Session Participant
ALTER TABLE session_participant
    ADD FOREIGN KEY (session_id) REFERENCES session(id) ON DELETE CASCADE,
    ADD FOREIGN KEY (user_id) REFERENCES user(username);

-- User
ALTER TABLE user
    ADD FOREIGN KEY (profile_pic_id) REFERENCES file(id);
